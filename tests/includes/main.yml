---
## Testing..

# - name: Test
#   shell: "ls /"
#   shell: "date"
#   #  shell: "pwd"

# - debug: msg="{{ hostvars.iteritems() }}"
# - setup:
# - debug: msg="{{ ansible_facts.distribution }}"
#- debug: msg={{ item }}
#  with_items:
#    - "{{ testssss }}"

# - debug: msg="{{ ansible_facts }}"
# - debug: msg="{{ inventory_hostname }}{{ ansible_facts.hostname}}"
# - debug: msg={{ hostvars }}
# - debug: msg={{ all_ip[0] }}
# - debug: msg={{ hostvars[inventory_hostname].groups['kube-master'][0] }}
  # debug: msg={{ target_ssh_private_key_file }}
# - debug: msg={{ ansible_facts }}
# - debug: msg={{ hostvars[inventory_hostname].ansible_default_ipv4.address }}
# - debug: msg={{ hostvars[inventory_hostname].ansible_hostname }
# - name: Copy the generated CA certificates to other nodes.
#   shell: "sudo scp -r -o StrictHostKeyChecking=no \
#             -i {{ ssh_public_key }} \
#             -P {{ ssh_connect_port }} \
#             {{ etcd_ssl_dirs }}{{ item[1] }} \
#             {{ ssh_connect_user }}@{{ item[0] }}:{{ etcd_ssl_dirs }}{{ item[1] }}"
#   with_nested:
#     - "{{ k8s_master_ip_list }}"
#     - ['etcd-ca-key.pem', 'etcd-ca.pem', 'etcd-key.pem', 'etcd.pem']

# - shell: 'tee /etc/docker/daemon.json <<-EOF
#         {
#           "registry-mirrors": ["https://4dyopx9i.mirror.aliyuncs.com"]
#         }
#         EOF'

# - shell: cat < /tmp/123.txt
#   args:
#     executable: /bin/bash

# - set_fact:
#      one_fact: something

# - debug: msg="{{ one_fact }}"

# - name: Detect cluster information
#   debug: 
#     msg: docker run --rm -i -e ETCDCTL_API=2 -v {{ etcd_ssl_dirs }}:{{ etcd_ssl_dirs }} -w {{ etcd_ssl_dirs }} {{ k8s_cluster_component_registry }}/etcd:{{ etcd_version }} etcdctl --ca-file=./etcd-ca.pem --key-file=./etcd-key.pem --cert-file=./etcd.pem --endpoints {{ etcd_cluster_str }} member list
# - debug:
#     msg: "{{ k8s_upgrade_version }}"
- name: Copy Kubernetes ApiServer Config Files
  template: 
    src: tests/templates/kube-apiserver.j2
    dest: "/tmp/kube-apiserver.yml"
    mode: 0644
    owner: "{{ ssh_connect_user }}" 
  delegate_to: "{{ groups['etcd'][0] }}"