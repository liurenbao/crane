---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: Output current Ansible Version.
      shell: ansible --version || true

- hosts: k8s-cluster:etcd
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  roles:
    - { role: downloads-ssh-key, tags: [copy_ssh_private_key]}

- name: Prepare the environment and install docker.
  hosts: k8s-cluster:etcd
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: clean-install, tags: [clean]}
    - { role: system-initialize, tags: [system]}
    - { role: docker-install, tags: [docker]}

- name: Binary File Deployment.
  hosts: k8s-cluster:etcd
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: downloads-packages, tags: [packages]}
  tasks:
    - { include: roles/kubernetes-default/includes/main.yml }

- name: Cluster Master Configuration File Deployment, CFSSL Generated CA
  hosts: kube-master[0]
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-default, tags: [k8s-default]}

- name: Copy Etcd Config
  hosts: etcd
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: etcd-install, tags: [etcd]}

- name: Cluster Master Kubernetes Manifests Files
  hosts: kube-master
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-manifests, tags: [k8s-manifests]}

- name: Create Kubernetes Kubelet Config and Run Kubelet
  hosts: kube-master
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-master, tags: [k8s-master]}

- name:  Add Kubernetes Apiserver to Kubelet and Bootstrap RBAC and Copy Nodes Config to Worker.
  hosts: kube-master[0]
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-bootstraps, tags: [k8s-bootstraps]}

- name: Create Nodes
  hosts: kube-node
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-nodes, tags: [k8s-nodes]}

- name: Create Kubernetes Network
  hosts: kube-master[0]
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: kubernetes-networks, tags: [k8s-networks]}

- name: Deploy Add Ons
  hosts: kube-master
  gather_facts: true
  sudo: yes
  remote_user: "{{ ssh_connect_user }}"
  vars:
    ansible_ssh_pipelining: true
  roles:
    - { role: add-ons, tags: [k8s-addons]}