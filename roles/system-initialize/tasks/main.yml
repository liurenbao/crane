---
- setup:
  
- name: Check Swap
  shell: "swapon -s | sed '1d' | awk '{print $1}'"
  register: result
  ignore_errors: true

- name: Off Swap
  shell: "swapoff $(swapon -s | sed '1d' | awk '{print $1}')"
  when: result is failed
  ignore_errors: true

- name: Create CA WorkDir
  file:
    path: "{{ etcd_ssl_dirs }}"
    mode: 0755
    owner: "{{ ssh_connect_user }}"
    state: directory

- name: Create Kubernetes PKI WorkDir
  file:
    path: "{{ kubernetes_etc_dirs }}pki"
    mode: 0755
    owner: "{{ ssh_connect_user }}"
    state: directory

- name: Create CNI Cluster Config
  file:
    path: "{{ cni_config_dir }}"
    mode: 0755
    owner: "{{ ssh_connect_user }}"
    state: directory

- name: Create CNI Binary Directory
  file:
    path: "{{ kubernetes_cni_dirs }}"
    mode: 0755
    owner: "{{ ssh_connect_user }}"
    state: directory

- name: Ubuntu Install IPVS Admin
  apt: 
    name: ipvsadm 
    state: present
  when: kube_proxy_mode == 'ipvs' and ansible_distribution == 'Ubuntu' and is_install_ipvsadm
  ignore_errors: true

- name: Centos Install IPVS Admin
  apt: 
    name: ipvsadm 
    state: present
  when: kube_proxy_mode == 'ipvs' and ansible_distribution == 'CentOS' and is_install_ipvsadm
  ignore_errors: true

- name: Ubuntu Install IPset
  apt: 
    name: ipset 
    state: present
  when: ansible_distribution == 'Ubuntu' and is_install_ipvsadm
  ignore_errors: true

- name: Centos Install IPset
  apt: 
    name: ipset 
    state: present
  when: ansible_distribution == 'CentOS' and is_install_ipvsadm
  ignore_errors: true

- name: IPVS initialize Module
  shell: "modprobe -- ip_vs && \
          modprobe -- ip_vs_rr && \
          modprobe -- ip_vs_wrr && \
          modprobe -- ip_vs_sh && \
          modprobe -- nf_conntrack_ipv4 && \
          modprobe -- br_netfilter"

- name: Check IPVS
  shell: "lsmod | grep ip_vs"

- name: Copy Sysctl Files
  copy:
    src: k8s.conf
    dest: /etc/sysctl.d/k8s.conf
    owner: "{{ ssh_connect_user }}"
    mode: 0644

- name: Execute Configuration Command
  shell: sysctl -p /etc/sysctl.d/k8s.conf

- name: Centos Stop Firewalld
  service: 
    name: firewalld
    enabled: no
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7"

- name: Centos Stop SELinux
  shell: "sed -i 's#^SELINUX\\=enforcing#SELINUX\\=disabled#g' /etc/selinux/config && setenforce 0"
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7"