---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  my.cnf: |-
    #
    # The MySQL database server configuration file.
    #
    # You can copy this to one of:
    # - "/etc/mysql/my.cnf" to set global options,
    # - "~/.my.cnf" to set user-specific options.
    #
    # One can use all long options that the program supports.
    # Run program with --help to get a list of available options and with
    # --print-defaults to see which it would actually understand and use.
    #
    # For explanations see
    # http://dev.mysql.com/doc/mysql/en/server-system-variables.html

    # This will be passed to all mysql clients
    # It has been reported that passwords should be enclosed with ticks/quotes
    # escpecially if they contain "#" chars...
    # Remember to edit /etc/mysql/debian.cnf when changing the socket location.
    [client]
    port    = 3306
    socket    = /var/run/mysqld/mysqld.sock

    # Here is entries for some specific programs
    # The following values assume you have at least 32M ram

    # This was formally known as [safe_mysqld]. Both versions are currently parsed.
    [mysqld_safe]
    socket    = /var/run/mysqld/mysqld.sock
    nice    = 0

    [mysqld]
    #
    # * Basic Settings
    #
    user    = mysql
    pid-file  = /var/run/mysqld/mysqld.pid
    socket    = /var/run/mysqld/mysqld.sock
    port    = 3306
    basedir   = /usr
    datadir   = /var/lib/mysql
    tmpdir    = /tmp
    lc-messages-dir = /usr/share/mysql
    skip-external-locking
    collation_server=utf8_unicode_ci
    character_set_server=utf8
    skip-character-set-client-handshake
    transaction-isolation=READ-COMMITTED
    innodb_log_file_size=64M
    innodb_large_prefix=1
    innodb_file_format=Barracuda
    #
    # Instead of skip-networking the default is now to listen only on
    # localhost which is more compatible and is not less secure.
    bind-address    = 0.0.0.0
    #bind-address   = 127.0.0.1
    #
    # * Fine Tuning
    #
    key_buffer_size         = 16M
    max_allowed_packet  = 160M
    thread_stack    = 192K
    thread_cache_size       = 8
    # This replaces the startup script and checks MyISAM tables if needed
    # the first time they are touched
    myisam-recover-options = BACKUP
    #max_connections        = 100
    #table_cache            = 64
    #thread_concurrency     = 10
    #
    # * Query Cache Configuration
    #
    query_cache_limit = 1M
    query_cache_size        = 16M
    #
    # * Logging and Replication
    #
    # Both location gets rotated by the cronjob.
    # Be aware that this log type is a performance killer.
    # As of 5.1 you can enable the log at runtime!
    #general_log_file        = /var/log/mysql/mysql.log
    #general_log             = 1
    #
    # Error log - should be very few entries.
    #
    log_error = /var/log/mysql/error.log
    slow_query_log = on
    long_query_time = 1
    slow_query_log_file = slow.log
    log_queries_not_using_indexes = on
    #log-slow-queries = /var/log/mysql

    #
    # Here you can see queries with especially long duration
    #log_slow_queries = /var/log/mysql/mysql-slow.log
    #long_query_time = 2
    #log-queries-not-using-indexes
    #
    # The following can be used as easy to replay backup logs or for replication.
    # note: if you are setting up a replication slave, see README.Debian about
    #       other settings you may need to change.
    #server-id    = 1
    #log_bin      = /var/log/mysql/mysql-bin.log
    expire_logs_days  = 10
    max_binlog_size         = 100M
    #binlog_do_db   = include_database_name
    #binlog_ignore_db = include_database_name
    #
    # * InnoDB
    #
    # InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
    # Read the manual for more InnoDB related options. There are many!
    #
    # * Security Features
    #
    # Read the manual, too, if you want chroot!
    # chroot = /var/lib/mysql/
    #
    # For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
    #
    # ssl-ca=/etc/mysql/cacert.pem
    # ssl-cert=/etc/mysql/server-cert.pem
    # ssl-key=/etc/mysql/server-key.pem

    [mysqldump]
    quick
    quote-names
    max_allowed_packet  = 160M
    #log-slow-queries="/var/log/mysql/mysql-slow.log"
    #long_query_time = 4
    #log-queries-not-using-indexes

    [mysql]
    #no-auto-rehash # faster start of mysql but no tab completition

    [isamchk]
    key_buffer    = 16M

    #
    # * IMPORTANT: Additional settings that can override those from this file!
    #   The files must end with '.cnf', otherwise they'll be ignored.
    #
    #    !includedir /etc/mysql/conf.d/

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initial
data:
  initialize.sh: |-
    #!/bin/bash
    set -ex

    if [[ -e /var/lib/mysql/lost+found ]];then
      rm -rf /var/lib/mysql/*
    fi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    name: mysql
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  serviceName: "mysql"
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: data
        image: busybox:latest
        command:
        - sh
        - "/initialize.sh"
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: mysql-storage-data
        - name: script
          mountPath: "/initialize.sh"
          subPath: initialize.sh
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: TZ
          value: "Asia/Shanghai"
        - name: MYSQL_ROOT_PASSWORD
          value: "{{ nextcloud_mysql_root_password }}"
        - name: MYSQL_DATABASE
          value: "{{ nextcloud_mysql_database }}"
        - name: MYSQL_USER
          value: "{{ nextcloud_mysql_user }}"
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: "/var/lib/mysql"
          name: mysql-storage-data
        - mountPath: "/etc/mysql/conf.d"
          name: config-volume
      volumes:
      - name: config-volume
        configMap:
          name: mysql-config
      - name: script
        configMap:
          name: mysql-initial
          items:
            - key: initialize.sh
              path: initialize.sh
      - name: mysql-storage-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    name: mysql
spec:
  ports:
  - name: http
    port: 3306
    protocol: TCP
  selector:
    app: mysql
