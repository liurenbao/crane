apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zk
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  name: zk-cs
  labels:
    app: zk
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zk
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: zk-pdb
spec:
  selector:
    matchLabels:
      app: zk
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zookeeper
  replicas: {{ zookeeper_deploy_replicas }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zk
    spec:
      hostNetwork: true
      # nodeSelector:
      #   shileizcc.com/schedule-hbase-01: "true"
      # tolerations:
      # - key: "special"
      #   operator: "Equal"
      #   value: "true"
      #   effect: "NoSchedule"
      # - key: "organization"
      #   operator: "Equal"
      #   value: "user"
      #   effect: "NoSchedule"
      # - key: "application"
      #   operator: "Equal"
      #   value: "bigdata"
      #   effect: "NoSchedule"
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: "app"
      #               operator: In
      #               values:
      #               - zk
      #         topologyKey: "kubernetes.io/hostname"
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: Always
        image: slzcc/zookeeper:3.4.14-supervisord
        resources:
          requests:
            memory: "2000Mi"
            cpu: "2"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "zkServer.sh start-foreground"
        env:
        - name: TZ
          value: Asia/Shanghai
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
        - mountPath: /usr/share/zoneinfo
          name: usr-local-timezone
          readOnly: true
        # - name: zk-config
        #   mountPath: /opt/zookeeper/conf/zoo.cfg
        #   subPath: zoo.cfg
      volumes:
      - hostPath:
          path: /usr/share/zoneinfo
          type: DirectoryOrCreate
        name: usr-local-timezone
      - name: datadir
        emptyDir: {}
      # - name: zk-config
      #   configMap:
      #     name: zk-config
      #     items:
      #     - key: zoo.cfg
      #       path: zoo.cfg
