---
# Source: harbor/templates/database/database-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-database"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
type: Opaque
data:
  POSTGRES_PASSWORD: "{{ harbor_pg_secret_admin_password | string | b64encode }}"

---
# Source: harbor/templates/database/database-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-database"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
spec:
  ports:
    - port: 5432
  selector:
    release: release-name
    app: "harbor"
    component: database

---
# Source: harbor/templates/database/database-ss.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-database"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
    component: database
spec:
  replicas: 1
  serviceName: "{{ harbor_project_name_prefix }}harbor-database"
  selector:
    matchLabels:
      release: release-name
      app: "harbor"
      component: database
  template:
    metadata:
      labels:
        heritage: Tiller
        release: release-name
        chart: harbor
        app: "harbor"
        component: database
      annotations:
        checksum/secret: 90e0d57ebc6da6126ee1a270482b27747d8dede1c6ae5c371fafa2157b82cb87
    spec:
      initContainers:
      - name: "change-permission-of-directory"
        securityContext:
          runAsUser: 0
        image: goharbor/harbor-db:{{ harbor_version }}
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args: ["-c", "chown -R postgres:postgres /var/lib/postgresql/data"]
        volumeMounts:
        - name: database-data
          mountPath: /var/lib/postgresql/data
          subPath:
      - name: "remove-lost-found"
        image: goharbor/harbor-db:{{ harbor_version }}
        imagePullPolicy: IfNotPresent
        command: ["rm", "-Rf", "/var/lib/postgresql/data/lost+found"]
        volumeMounts:
        - name: database-data
          mountPath: /var/lib/postgresql/data
          subPath:
      containers:
      - name: database
        image: goharbor/harbor-db:{{ harbor_version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          value: "{{ time_location }}"
        envFrom:
        - secretRef:
            name: "{{ harbor_project_name_prefix }}harbor-database"
        livenessProbe:
          exec:
            command:
            - /docker-healthcheck.sh
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - /docker-healthcheck.sh
          initialDelaySeconds: 1
          periodSeconds: 10
        volumeMounts:
        - name: database-data
          mountPath: /var/lib/postgresql/data
          subPath:
        - mountPath: /usr/share/zoneinfo
          name: usr-local-timezone
          readOnly: true
      volumes:
      - name: database-data
        emptyDir: {}
      - name: usr-local-timezone
        hostPath:
          path: /usr/share/zoneinfo
          type: DirectoryOrCreate

