---
# CRI in Docker
- name: Clean Temporary Container *
  shell: "{{ kubernetes_ctl_path }}docker rm -f import-kubernetes-temporary"
  ignore_errors: true

- name: Pull the Image
  shell: "{{ kubernetes_ctl_path }}docker rm -f import-kubernetes-temporary | true && {{ kubernetes_ctl_path }}docker run --name import-kubernetes-temporary -d -v /var/run/docker.sock:/var/run/docker.sock:ro {{ k8s_image_deploy_repo }}:{{ k8s_version }}.{{ build_k8s_version }} sleep 1234567"
  register: check_cmd
  ignore_errors: true

- name: Export the Kubelet
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kubelet {{ kubernetes_ctl_path }}"

- name: Export the Kubectl
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kubectl {{ kubernetes_ctl_path }}"

- name: Export the Kube-proxy
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kube-proxy {{ kubernetes_ctl_path }}"
  when: 
    - k8s_deploy_type == 'systemd'

- name: Export the kube-scheduler
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kube-scheduler {{ kubernetes_ctl_path }}"
  when: 
    - k8s_deploy_type == 'systemd'
    - is_kube_master or is_add_master

- name: Export the kube-controller-manager
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kube-controller-manager {{ kubernetes_ctl_path }}"
  when: 
    - k8s_deploy_type == 'systemd'
    - is_kube_master or is_add_master

- name: Export the kube-apiserver
  shell: "{{ kubernetes_ctl_path }}docker cp import-kubernetes-temporary:/kubernetes/server/bin/kube-apiserver {{ kubernetes_ctl_path }}"
  when: 
    - k8s_deploy_type == 'systemd'
    - is_kube_master or is_add_master

- name: Check Temporary Container **
  shell: "{{ kubernetes_ctl_path }}docker rm -f import-kubernetes-temporary"
  when: check_cmd.rc == 0
  ignore_errors: true