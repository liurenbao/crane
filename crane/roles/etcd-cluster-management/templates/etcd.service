{% macro initial_cluster() -%}
{% for host in groups['etcd'] -%}
  {{ hostvars[host]['ansible_nodename'] }}={{ etcd_peer_url_scheme }}://
  {%- if etcd_interface != "" -%}
    {{ hostvars[host]['ansible_' + etcd_interface].ipv4.address }}
  {%- else -%}
    {{ hostvars[host].ansible_default_ipv4.address }}
  {%- endif -%}
:{{ etcd_peer_port }}
  {%- if not loop.last -%},{%- endif -%}
{%- endfor -%}
{% endmacro -%}
[Unit]
Description=Etcd Service
After=syslog.target network.target

[Service]
Type=notify
ExecStart={{ kubernetes_ctl_path }}etcd \
--name={{ hostvars[inventory_hostname].ansible_nodename }} \
--listen-client-urls={{ etcd_url_scheme }}://0.0.0.0:{{ etcd_client_port }} \
--listen-peer-urls={{ etcd_peer_url_scheme }}://0.0.0.0:{{ etcd_peer_port }} \
--advertise-client-urls={{ etcd_url_scheme }}://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ etcd_client_port }} \
--initial-advertise-peer-urls={{ etcd_peer_url_scheme }}://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:{{ etcd_peer_port }} \
{% if etcd_client_cert_auth %}
--client-cert-auth \
{% endif %}{% if etcd_peer_client_cert_auth %}
--peer-client-cert-auth \
{% endif %}{% if etcd_client_tls_auto %}
--auto-tls \
{% endif %}{% if etcd_peer_tls_auto %}
--peer-auto-tls \
{% endif %}
--cert-file={{ etcd_ssl_dirs }}{{ tls_etcd_cert_file_name }} \
--key-file={{ etcd_ssl_dirs }}{{ tls_etcd_key_file_name }} \
--trusted-ca-file={{ etcd_ssl_dirs }}{{ tls_etcd_ca_file_name }} \
--peer-cert-file={{ etcd_ssl_dirs }}{{ tls_etcd_cert_file_name }} \
--peer-key-file={{ etcd_ssl_dirs }}{{ tls_etcd_key_file_name }} \
--peer-trusted-ca-file={{ etcd_ssl_dirs }}{{ tls_etcd_ca_file_name }} \
--initial-cluster={{ initial_cluster() }} \
--initial-cluster-token={{ etcd_cluster_token }} \
--initial-cluster-state={{ etcd_cluster_type }} \
--data-dir={{ etcd_data_dirs }}

ExecReload=/bin/kill -s HUP $MAINPID
Environment=
TimeoutSec=0
RestartSec=2
Restart=always
 
[Install]
WantedBy=multi-user.target