## Helm
## ********************************************************************************************************************************

# 部署 Helm
is_deploy_helm: false

## Ingress Nginx
## ********************************************************************************************************************************

# 部署 Ingress Nginx
is_deploy_ingress_nginx: false

# Ingress Nginx Version
ingress_nginx_version: '0.26.1'

# 部署 Ingress Nginx Example
is_deploy_ingress_nginx_example: false

# Ingress Nginx Example Domain
# Ingres 示例使用的域名, 如果没有自定义域名, 可配置本机 Hosts
ingress_nginx_example: 'www.example.com'

## Prometheus Operator
## ********************************************************************************************************************************

# 部署 Prometheus Operator
is_deploy_prometheus_operator: false

# 部署 Prometheus Operator Ingress 所使用的 Ingress Domain
monitoring_ingress_prometheus_domain: 'prometheus.example.com'
monitoring_ingress_grafana_domain: 'grafana.example.com'
monitoring_ingress_alertmanager_domain: 'alertmanager.example.com'

# Prometheus Operator Grafana SMTP Configs
prometheus_operator_grafana_smtp_enable: true
prometheus_operator_grafana_smtp_password: ''
prometheus_operator_grafana_smtp_server: 'smtp.126.com:465'
prometheus_operator_grafana_smtp_user: 'shileizcc@126.com'
prometheus_operator_grafana_smtp_from_address: 'shileizcc@126.com'

## DNS Example
## ********************************************************************************************************************************

# 部署 DNS Example Tools
# 用来测试集群内是否 DNS 可用的 Tools Pods
is_deploy_busybox_example: false

## Istio
## ********************************************************************************************************************************

# 部署 Istio
# 注意 部署 Istio 不建议与 Prometheus Operator 一同部署, 可能会引发服务之间的冲突问题, 如需一同部署请自行解决依赖
is_deploy_istio: false

# Istio Home Path
istio_home: '/usr/local/istio-{{ istio_version }}'

# Istio Version
# https://github.com/istio/istio/releases
istio_version: '1.3.3'

# 部署 Istio 所使用的 Ingress Domain
istio_ingress_prometheus_domain: 'prometheus.example.com'
istio_ingress_grafana_domain: 'grafana.example.com'
istio_ingress_tracing_domain: 'tracing.example.com'
istio_ingress_kiali_domain: 'kiali.example.com'

# istio kiali user/pass base64 coding, default admin
istio_kiali_username: 'YWRtaW4='
istio_kiali_password: 'YWRtaW4='

# 部署 upload service
# 如果部署 Harbor 则此服务默认开启，因为需要提供 TLS 证书的下载，如果机器网络等因素不稳定则会跳过。
is_deploy_upload_service: "{{ is_deploy_harbor }}"

upload_service_ingress_domain: 'upload.example.com'

## Harbor
## ********************************************************************************************************************************

# Harbor Deploy enable
is_deploy_harbor: false

# Harbor Deploy Namespace
harbor_namespace: 'harbor'

# Harbor Admin Password
harbor_admin_password: 'Harbor12345'

# Harbor PostGreSQL Password
harbor_pg_admin_password: 'changeit'
harbor_pg_clair_password: 'changeit'

# Harbor Core Secure Key
harbor_core_secure_key: 'not-a-secure-key' 
harbor_core_secret: '90USoEBlROrSey6F'

# Harbor Registry Secure
harbor_registry_secure_key: 'iCELcbcIHHG4RSua'
harbor_registry_redis_password: ''

# Harbor JobService Secure
harbor_jobservice_secure_key: 'L1Jp8tCQngTlftfO'

# Harbor chartmuseum Secure
harbor_chartmuseum_redis_password: ''

# Harbor Domain
harbor_ingress_default_domain: 'harbor.example.com'
harbor_ingress_notary_domain: 'notary.example.com'

# CFSSL 生成证书的加密方式
tls_harbor_server_encryption_algorithm: 'rsa'
tls_harbor_client_encryption_algorithm: 'rsa'

# CFSSL 生成证书的通过加密算法生成的长度
tls_harbor_server_encryption_algorithm_size: 2048
tls_harbor_client_encryption_algorithm_size: 2048

# 证书有效期, 默认为 5 年, CA 根证书与 server 证书使用一个时间
tls_harbor_server_validity_period: 20
tls_harbor_client_validity_period: 20

# 证书信息头, 国家信息 
# Country Name
tls_harbor_server_head_info_C: 'CN'
tls_harbor_client_head_info_C: 'CN'

# 证书信息头, 地区或城市 
# Locality Name
tls_harbor_server_head_info_L: 'BeiJing'
tls_harbor_client_head_info_L: 'BeiJing'

# 证书信息头, 组织 
# Organization Name 
tls_harbor_server_head_info_O: 'Harbor'
tls_harbor_client_head_info_O: 'Harbor'

# 证书信息头, 组织单位 
# Organizational Units Name
tls_harbor_server_head_info_OU: 'Harbor'
tls_harbor_client_head_info_OU: 'Harbor'

# 证书信息头, 州或省 
# State or Province Name
tls_harbor_server_head_info_ST: 'BeiJing'
tls_harbor_client_head_info_ST: 'BeiJing'

# Docs https://wiki.shileizcc.com/confluence/display/KUB/Kubernetes+Harbor

# Deploy Cluster Host List
## ********************************************************************************************************************************


k8s_master_ip_list: >-
  [{% for host in groups['kube-master'] -%}
    '{{ hostvars[host].ansible_default_ipv4.address }}'
    {%- if not loop.last -%},{%- endif -%}
  {%- endfor -%}]

k8s_master_name_list: >-
  [{% for host in groups['kube-master'] -%}
    '{{ hostvars[host].ansible_nodename }}'
    {%- if not loop.last -%},{%- endif -%}
  {%- endfor -%}]

k8s_master_ip_str: >-
  {% for host in groups['kube-master'] -%}
    {{ hostvars[host].ansible_default_ipv4.address }}
    {%- if not loop.last -%},{%- endif -%}
  {%- endfor -%}

all_hostname_str: >-
  {% for host in groups['kube-master'] -%}
    {{ hostvars[host]['ansible_nodename'] }}
    {%- if not loop.last -%},{%- endif -%}
  {%- endfor -%}


# TLS
## ********************************************************************************************************************************

tls_harbor_validity_period_hours: '{{ tls_harbor_server_validity_period * 365 * 24 }}'


