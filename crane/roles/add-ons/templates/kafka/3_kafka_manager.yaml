apiVersion: v1
kind: Service
metadata:
  name: kafka-manager
  labels:
    app: kafka-manager
spec:
  ports:
  - name: http
    port: 9000
    targetPort: 9000
  selector:
    app: kafka-manager

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-manager
  labels:
    app: kafka-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-manager
  template:
    metadata:
      labels:
        app: kafka-manager
    spec:
      containers:
      - name: kafka-manager
        image: zenko/kafka-manager:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: kafka-manager
          containerPort: 9000
          protocol: TCP
        env:
        - name: ZK_HOSTS
          value: "zk-0.zk-hs.cdh.svc.cluster.local:2181,zk-1.zk-hs.cdh.svc.cluster.local:2181,zk-2.zk-hs.cdh.svc.cluster.local:2181"
        livenessProbe:
          httpGet:
            path: /api/health
            port: kafka-manager
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: kafka-manager
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kafka-manager
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m"
spec:
  rules:
  - host: {{ kafka_manage_ingress_domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: kafka-manager
          servicePort: http
