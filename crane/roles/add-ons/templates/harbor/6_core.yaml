---
# Source: harbor/templates/core/core-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ harbor_project_name_prefix }}harbor-core
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
data:
  app.conf: |+
    appname = Harbor
    runmode = prod
    enablegzip = true

    [prod]
    httpport = 8080
  PORT: "8080"
  DATABASE_TYPE: "postgresql"
  POSTGRESQL_HOST: "{{ harbor_project_name_prefix }}harbor-database"
  POSTGRESQL_PORT: "5432"
  POSTGRESQL_USERNAME: "postgres"
  POSTGRESQL_DATABASE: "registry"
  POSTGRESQL_SSLMODE: "disable"
  POSTGRESQL_MAX_IDLE_CONNS: "50"
  POSTGRESQL_MAX_OPEN_CONNS: "1000"
  EXT_ENDPOINT: "https://{{ harbor_ingress_default_domain }}"
  CORE_URL: "http://{{ harbor_project_name_prefix }}harbor-core:80"
  JOBSERVICE_URL: "http://{{ harbor_project_name_prefix }}harbor-jobservice"
  REGISTRY_URL: "http://{{ harbor_project_name_prefix }}harbor-registry:5000"
  TOKEN_SERVICE_URL: "http://{{ harbor_project_name_prefix }}harbor-core:80/service/token"
  WITH_NOTARY: "true"
  NOTARY_URL: "http://{{ harbor_project_name_prefix }}harbor-notary-server:4443"
  CORE_LOCAL_URL: "http://127.0.0.1:8080"
  WITH_CLAIR: "true"
  CLAIR_ADAPTER_URL: "http://{{ harbor_project_name_prefix }}harbor-clair:8080"
  WITH_TRIVY: "true"
  TRIVY_ADAPTER_URL: "http://{{ harbor_project_name_prefix }}harbor-trivy:8080"
  REGISTRY_STORAGE_PROVIDER_NAME: "filesystem"
  WITH_CHARTMUSEUM: "true"
  CHART_REPOSITORY_URL: "http://{{ harbor_project_name_prefix }}harbor-chartmuseum"
  LOG_LEVEL: "info"
  CONFIG_PATH: "/etc/core/app.conf"
  CHART_CACHE_DRIVER: "redis"
  _REDIS_URL_CORE: "redis://{{ harbor_project_name_prefix }}harbor-redis:6379/0?idle_timeout_seconds=30"
  _REDIS_URL_REG: "redis://{{ harbor_project_name_prefix }}harbor-redis:6379/2?idle_timeout_seconds=30"
  PORTAL_URL: "http://{{ harbor_project_name_prefix }}harbor-portal"
  REGISTRY_CONTROLLER_URL: "http://{{ harbor_project_name_prefix }}harbor-registry:8080"
  REGISTRY_CREDENTIAL_USERNAME: "harbor_registry_user"
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  NO_PROXY: "{{ harbor_project_name_prefix }}harbor-core,{{ harbor_project_name_prefix }}harbor-jobservice,{{ harbor_project_name_prefix }}harbor-database,{{ harbor_project_name_prefix }}harbor-chartmuseum,{{ harbor_project_name_prefix }}harbor-clair,{{ harbor_project_name_prefix }}harbor-notary-server,{{ harbor_project_name_prefix }}harbor-notary-signer,{{ harbor_project_name_prefix }}harbor-registry,{{ harbor_project_name_prefix }}harbor-portal,{{ harbor_project_name_prefix }}harbor-trivy,127.0.0.1,localhost,.local,.internal"
  PERMITTED_REGISTRY_TYPES_FOR_PROXY_CACHE: "docker-hub,harbor"
  
---
# Source: harbor/templates/core/core-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: {{ harbor_project_name_prefix }}harbor-core
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    release: release-name
    app: "harbor"
    component: core

---
# Source: harbor/templates/core/core-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ harbor_project_name_prefix }}harbor-core
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
    component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      release: release-name
      app: "harbor"
      component: core
  template:
    metadata:
      labels:
        release: release-name
        app: "harbor"
        component: core
      annotations:
        checksum/configmap: 5102de663fd724059140f17860805bdf4bc332dff8b6ee6a28b8b0d34ad33d41
        checksum/secret: 5606a3539fe158db5bbfad9d3acb98fb95c1d313d59cd96e88d97da32e29f2ce
        checksum/secret-jobservice: 3558956449ed3c2c3774a2d91ca78a75c53f909c68d80ed553ec733242298ae9
    spec:
      securityContext:
        fsGroup: 10000
      containers:
      - name: core
        image: goharbor/harbor-core:{{ harbor_version }}
        imagePullPolicy: IfNotPresent
        startupProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 360
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v2.0/ping
            scheme: HTTP
            port: 8080
          failureThreshold: 2
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: "{{ harbor_project_name_prefix }}harbor-core"
        - secretRef:
            name: "{{ harbor_project_name_prefix }}harbor-core"
        env:
        - name: TZ
          value: "{{ time_location }}"
        - name: CORE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ harbor_project_name_prefix }}harbor-core
              key: secret
        - name: JOBSERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: "{{ harbor_project_name_prefix }}harbor-jobservice"
              key: JOBSERVICE_SECRET
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: config
          mountPath: /etc/core/app.conf
          subPath: app.conf
        - name: secret-key
          mountPath: /etc/core/key
          subPath: key
        - name: token-service-private-key
          mountPath: /etc/core/private_key.pem
          subPath: tls.key
        - name: ca-download
          mountPath: /etc/core/ca
        - name: psc
          mountPath: /etc/core/token
        - mountPath: /usr/share/zoneinfo
          name: usr-local-timezone
          readOnly: true
      volumes:
      - name: usr-local-timezone
        hostPath:
          path: /usr/share/zoneinfo
          type: DirectoryOrCreate
      - name: config
        configMap:
          name: {{ harbor_project_name_prefix }}harbor-core
          items:
            - key: app.conf
              path: app.conf
      - name: secret-key
        secret:
          secretName: {{ harbor_project_name_prefix }}harbor-core
          items:
            - key: secretKey
              path: key
      - name: token-service-private-key
        secret:
          secretName: {{ harbor_project_name_prefix }}harbor-core
      - name: ca-download
        secret:
          secretName: "{{ harbor_project_name_prefix }}harbor-ingress"
      - name: psc
        emptyDir: {}


