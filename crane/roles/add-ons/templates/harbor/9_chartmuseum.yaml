---
# Source: harbor/templates/chartmuseum/chartmuseum-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
type: Opaque
data:
  CACHE_REDIS_PASSWORD: "{{ harbor_chartmuseum_secret_redis_password | string | b64encode }}"

---
# Source: harbor/templates/jobservice/jobservice-cm-env.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-jobservice-env"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
data:
  CORE_URL: "http://{{ harbor_project_name_prefix }}harbor-core:80"
  TOKEN_SERVICE_URL: "http://{{ harbor_project_name_prefix }}harbor-core:80/service/token"
  REGISTRY_URL: "http://{{ harbor_project_name_prefix }}harbor-registry:5000"
  REGISTRY_CONTROLLER_URL: "http://{{ harbor_project_name_prefix }}harbor-registry:8080"
  REGISTRY_CREDENTIAL_USERNAME: "{{ harbor_jobservice_secret_registry_credential_username | string | b64encode }}"
  HTTP_PROXY: ""
  HTTPS_PROXY: ""
  NO_PROXY: "{{ harbor_project_name_prefix }}harbor-core,{{ harbor_project_name_prefix }}harbor-jobservice,{{ harbor_project_name_prefix }}harbor-database,{{ harbor_project_name_prefix }}harbor-chartmuseum,{{ harbor_project_name_prefix }}harbor-clair,{{ harbor_project_name_prefix }}harbor-notary-server,{{ harbor_project_name_prefix }}harbor-notary-signer,{{ harbor_project_name_prefix }}harbor-registry,{{ harbor_project_name_prefix }}harbor-portal,{{ harbor_project_name_prefix }}harbor-trivy,127.0.0.1,localhost,.local,.internal"

---
# Source: harbor/templates/chartmuseum/chartmuseum-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
data:
  PORT: "9999"
  CACHE: "redis"
  CACHE_REDIS_ADDR: "{{ harbor_project_name_prefix }}harbor-redis:6379"
  CACHE_REDIS_DB: "3"
  BASIC_AUTH_USER: "chart_controller"
  DEPTH: "1"
  DEBUG: "false"
  LOG_JSON: "true"
  DISABLE_METRICS: "false"
  DISABLE_API: "false"
  DISABLE_STATEFILES: "false"
  ALLOW_OVERWRITE: "true"
  AUTH_ANONYMOUS_GET: "false"
  CONTEXT_PATH: ""
  INDEX_LIMIT: "0"
  MAX_STORAGE_OBJECTS: "0"
  MAX_UPLOAD_SIZE: "20971520"
  CHART_POST_FORM_FIELD_NAME: "chart"
  PROV_POST_FORM_FIELD_NAME: "prov"
  STORAGE: "local"
  STORAGE_LOCAL_ROOTDIR: "/chart_storage"
  
---
# Source: harbor/templates/chartmuseum/chartmuseum-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
spec:
  ports:
    - port: 80
      targetPort: 9999
  selector:
    release: release-name
    app: "harbor"
    component: chartmuseum

---
# Source: harbor/templates/chartmuseum/chartmuseum-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
  labels:
    heritage: Tiller
    release: release-name
    chart: harbor
    app: "harbor"
    component: chartmuseum
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      release: release-name
      app: "harbor"
      component: chartmuseum
  template:
    metadata:
      labels:
        heritage: Tiller
        release: release-name
        chart: harbor
        app: "harbor"
        component: chartmuseum
      annotations:
        checksum/configmap: 3a3d7bd43ee296b038cb8f66e75010180d5c45c6b7e51f16f38ed6a4a2d31ff1
        checksum/secret: f854a2a0fc0067507c97ae856d61bbe3e74c8b8498778f18d856126adef4a11b
        checksum/secret-core: a9907bceec7b276e25d1716477db697e02e7c150a4a4ba450013f3992e7a1672
    spec:
      securityContext:
        fsGroup: 10000
      containers:
      - name: chartmuseum
        image: goharbor/chartmuseum-photon:{{ harbor_version }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 9999
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9999
          initialDelaySeconds: 1
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
        - secretRef:
            name: "{{ harbor_project_name_prefix }}harbor-chartmuseum"
        env:
        - name: TZ
          value: "{{ time_location }}"
        - name: BASIC_AUTH_PASS
          valueFrom:
            secretKeyRef:
              name: "{{ harbor_project_name_prefix }}harbor-core"
              key: secret
        - # Needed to make AWS' client connect correctly (see https://github.com/Tiller/chartmuseum/issues/280)
            name: AWS_SDK_LOAD_CONFIG
            value: "1"
        ports:
        - containerPort: 9999
        volumeMounts:
        - name: chartmuseum-data
          mountPath: /chart_storage
          subPath: 
        - mountPath: /usr/share/zoneinfo
          name: usr-local-timezone
          readOnly: true
      volumes:
      - name: usr-local-timezone
        hostPath:
          path: /usr/share/zoneinfo
          type: DirectoryOrCreate
      - name: chartmuseum-data
        emptyDir: {}