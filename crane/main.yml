---
- hosts: localhost
  gather_facts: false
  roles:
    - { role: local-task }

- hosts: k8s-cluster:etcd
  gather_facts: true
  become: yes
  become_method: sudo
  vars_files:
    - "roles/crane/defaults/main.yml"
  roles:
    - { role: downloads-ssh-key, tags: [copy_ssh_private_key]}

- name: Initialize Cluster Clean
  hosts: k8s-cluster:etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/crane/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-networks/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
  roles:
    - { role: clean-install, tags: [clean], when: is_initialize_clean}

- name: Prepare the environment and install CRI.
  hosts: k8s-cluster:etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/crane/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/cri-install/vars/docker.yaml"
    - "roles/cri-install/vars/containerd.yaml"
    - "roles/cri-install/vars/crio.yaml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/kubernetes-networks/defaults/main.yml"
  roles:
    - { role: system-initialize, tags: [system]}
    - { role: cri-install, tags: [cri]}

- name: Binary File Deployment.
  hosts: k8s-cluster:etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-default/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/tls.yaml"
  roles:
    - { role: downloads-packages, tags: [packages]}
  tasks:
    - { include_tasks: roles/kubernetes-default/includes/main.yml }

- name: Cluster Master Configuration File Deployment, CFSSL Generated CA
  hosts: kube-master[0]
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/kubernetes-default/defaults/tls.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
  roles:
    - { role: kubernetes-default, tags: [k8s-default]}

- name: Copy Etcd Config
  hosts: etcd
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-install/defaults/tls.yaml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
  roles:
    - { role: etcd-install, tags: [etcd]}

- name: Cluster Master Kubernetes Manifests Files
  hosts: kube-master
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/etcd-install/vars/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-default/vars/haproxy.yaml"
    - "roles/kubernetes-networks/defaults/keepalived.yaml"
    - "roles/crane/defaults/main.yml"
  roles:
    - { role: kubernetes-manifests, tags: [k8s-manifests]}

- name: Create Kubernetes Kubelet Config and Run Kubelet
  hosts: kube-master
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-default/vars/kubelet.yaml"
    - "roles/cri-install/vars/kubelet.yaml"
    - "roles/cri-install/vars/crio.yaml"
    - "roles/cri-install/vars/containerd.yaml"
  roles:
    - { role: kubernetes-master, tags: [k8s-master]}

- name:  Add Kubernetes Apiserver to Kubelet and Bootstrap RBAC and Copy Nodes Config to Worker.
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
  roles:
    - { role: kubernetes-bootstraps, tags: [k8s-bootstraps]}

- name: Create Nodes
  hosts: kube-node
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/cri-install/vars/kubelet.yaml"
    - "roles/kubernetes-default/vars/kubelet.yaml"
  roles:
    - { role: kubernetes-nodes, tags: [k8s-nodes]}

- name: Create Kubernetes Network
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/etcd-install/vars/main.yml"
    - "roles/kubernetes-networks/defaults/calico.yaml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
  roles:
    - { role: kubernetes-networks, tags: [k8s-networks]}

- name: Deploy Add Ons
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
    - "roles/system-initialize/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
  roles:
    - { role: add-ons, tags: [k8s-addons]}

- name: Deployment Kubernetes Cluster Afterward CMD
  hosts: kube-master[0]
  gather_facts: true
  become: yes
  become_method: sudo
  vars:
    ansible_ssh_pipelining: true
  vars_files:
    - "roles/downloads-ssh-key/defaults/main.yml"
    - "roles/crane/defaults/main.yml"
    - "roles/kubernetes-manifests/defaults/main.yml"
    - "roles/kubernetes-default/defaults/configure.yaml"
  roles:
    - { role: kubernetes-afterward, tags: [k8s-afterward]}
